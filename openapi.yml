openapi: 3.0.0
info:
  description: Bandwidth API specification
  version: '3.0.0-alpha.1'
  title: Bandwidth API
  contact:
    email: openapi@bandwidth.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: Account
    description: The Account API allows you to retrieve your current balance, transaction list, account type and all elements related to your platform account.
  - name: Applications
    description: Applications allow you to receive incoming call and messaging events.
  - name: AvailableNumbers
    description: The Available Numbers resource lets you search for numbers that are available for use with your application.
  - name: Media
    description: The Media resource lets you upload your media files to Bandwidth API servers so they can be used in applications without requiring a separate hosting provider.
paths:
  /v1/users/{userId}/account:
    get:
      tags:
        - Account
      summary: Get information about user account.
      operationId: get
      description: Get information about user account.
      responses:
        '200':
          description: information about user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /v1/users/{userId}/account/transactions:
    get:
      tags:
        - Account
      summary: Get the transactions from the user's account.
      operationId: getTransactions
      description: Get the transactions from the user's account.
      parameters:
        - name: maxItems
          in: query
          description: Limit the number of transactions that will be returned
          schema:
            type: integer
            format: int32
        - name: toDate
          in: query
          description: Return only transactions that are newer than the parameter
          schema:
            type: string
            format: date-time
        - name: fromDate
          in: query
          description: Return only transactions that are older than the parameter
          schema:
            type: string
            format: date-time
        - name: type
          in: query
          description: Return only transactions that are this type.
          schema:
            $ref: '#/components/schemas/AccountTransactionType'
        - name: page
          in: query
          description: Used for pagination to indicate the page requested for querying a list of transactions.
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: Used for pagination to indicate the size of each page requested for querying a list of transactions. 
          schema:
            type: integer
            format: int32
            default: 25
            maximum: 1000
        - name: number
          in: query
          description: Return only transactions that are from the specified number.
          schema:
            type: string
      responses:
        '200':
          description: information about user's account transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountTransaction'
  /v1/users/{userId}/applications:
    get:
      tags:
        - Applications
      summary: Get a list of your applications.
      operationId: list
      description: Get a list of your applications.
      parameters:
        - name: page
          in: query
          description: Used for pagination to indicate the page requested for querying a list of applications.
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          description: Used for pagination to indicate the size of each page requested for querying a list of applications.
          schema:
            type: integer
            format: int32
            default: 25
            maximum: 1000
      responses:
        '200':
          description: list of user's applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
    post:
      tags:
        - Applications
      summary: Creates an application that can handle calls and messages for one of your phone number.
      operationId: create
      description: Creates an application that can handle calls and messages for one of your phone number. Many phone numbers can share an application. For more information on how to integrate voice and messaging in your application, visit the [FAQ](http://dev.bandwidth.com/faq/#general)
      requestBody:
        $ref: '#/components/requestBodies/CreateApplicationData'
      responses:
        '201':
          $ref: '#/components/responses/Created'
  /v1/users/{userId}/applications/{id}:
    get:
      tags:
        - Applications
      summary: Gets information about one of your applications.
      operationId: get
      description: Gets information about one of your applications. No query parameters are supported.
      responses:
        '200':
          description: Application's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
    post:
      tags:
        - Applications
      summary: Makes changes to an application.
      operationId: update
      description: Makes changes to an application. 
      requestBody:
        $ref: '#/components/requestBodies/CreateApplicationData'
      responses:
        '200':
          $ref: '#/components/responses/Empty'
    delete:
      tags:
        - Applications
      summary: Permanently deletes an application.
      operationId: delete
      description: Permanently deletes an application. 
      responses:
        '200':
          $ref: '#/components/responses/Empty'  
  /v1/users/{userId}/media:
    get:
      tags:
        - Media
      summary: Gets a list of your media files. 
      operationId: list
      description: Gets a list of your media files. No query parameters are supported.
      responses:
        '200':
          description: list of media files data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
  /v1/users/{userId}/media/{mediaName}:
    get:
      tags:
          - Media
      summary: Downloads a media file you previously uploaded. 
      operationId: download
      description: Downloads a media file you previously uploaded.
      responses:
        '200':
          description: Content of file
          content:
            default:
              schema:
                type: string
                format: binary
    put:
      tags:
          - Media
      summary: Uploads a file the normal HTTP way. 
      operationId: upload
      description: Uploads a file the normal HTTP way. You may add headers to the request in order to provide some control to your media-file.
      parameters:
        - name: contentType
          in: header
          description: The media type of the entity-body.
          schema:
            type: string
        - name: cacheControl
          in: header
          description: The media type of the entity-body.
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
          - Media
      summary: Deletes a media file from Bandwidth API server. 
      operationId: delete
      description: Deletes a media file from Bandwidth API server.
      responses:
        '200':
          description: Success
  /v1/availableNumbers/local:
    get:
      tags:
        - AvailableNumbers
      summary: Search for available local numbers
      operationId: searchLocalNumbers
      description: Searches for available local numbers by location or pattern criteria. For more information about Bandwidthâ€™s local phone numbers, see the [FAQ](http://dev.bandwidth.com/faq/#voice)
      parameters:
        - name: city
          in: query
          description: A city name.
          schema:
            type: string
        - name: state
          in: query
          description: A two-letter US state abbreviation ("CA" for California).
          schema:
            type: string
        - name: zip
          in: query
          description: A 5-digit US ZIP code.
          schema:
            type: number
        - name: areaCode
          in: query
          description: A 3-digit telephone area code.
          schema:
            type: string            
        - name: inLocalCallingArea
          in: query
          description: Boolean value to indicate that the search for available numbers must consider overlayed areas. Only applied for localNumber searching.
          schema:
            type: boolean            
        - name: quantity
          in: query
          description: The maximum number of numbers to return
          schema:
            type: number
            format: int32
            default: 10,
            maximum: 5000
        - name: pattern
          in: query
          description: 'A number pattern that may include letters, digits, and the following wildcard characters: ? - matches any single digit, * - matches zero or more digits'
          schema:
            type: string
      responses:
        '200':
          description: list of found numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchNumberData'
    post:
      tags:
        - AvailableNumbers
      summary: Searches and order available local numbers.
      operationId: searchAndOrderLocalNumbers
      description: Searches and order available local numbers by location criteria. For more information about Bandwidthâ€™s local phone numbers, see the [FAQ](http://dev.bandwidth.com/faq/#voice)
      parameters:
        - name: city
          in: query
          description: A city name.
          schema:
            type: string
        - name: state
          in: query
          description: A two-letter US state abbreviation ("CA" for California).
          schema:
            type: string
        - name: zip
          in: query
          description: A 5-digit US ZIP code.
          schema:
            type: number
        - name: areaCode
          in: query
          description: A 3-digit telephone area code.
          schema:
            type: string
        - name: inLocalCallingArea
          in: query
          description: Boolean value to indicate that the search for available numbers must consider overlayed areas. Only applied for localNumber searching.
          schema:
            type: boolean
        - name: localNumber
          in: query
          description: It is defined as the first digits of a telephone number inside an area code for filtering the results. It must have at least 3 digits and the areaCode field must be filled
          schema:
            type: string
        - name: quantity
          in: query
          description: The maximum number of numbers to return
          schema:
            type: number
            format: int32
            default: 10,
            maximum: 5000
        - name: pattern
          in: query
          description: 'A number pattern that may include letters, digits, and the following wildcard characters: ? - matches any single digit, * - matches zero or more digits'
          schema:
            type: string
      responses:
        '201':
          description: list of ordered numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchAndOrderNumberData'
  /v1/availableNumbers/tollFree:
    get:
      tags:
        - AvailableNumbers
      summary: Search for available toll free numbers
      operationId: searchTollFreeNumbers
      description: For more information about Bandwidthâ€™s toll free phone numbers, see the [FAQ](http://dev.bandwidth.com/faq/#voice)
      parameters:
        - name: quantity
          in: query
          description: The maximum number of numbers to return
          schema:
            type: number
            format: int32
            default: 10,
            maximum: 5000
        - name: pattern
          in: query
          description: 'A number pattern that may include letters, digits, and the following wildcard characters: ? - matches any single digit, * - matches zero or more digits'
          schema:
            type: string
      responses:
        '200':
          description: list of found numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchNumberData'
    post:
      tags:
        - AvailableNumbers
      summary: Searches and order available toll free numbers.
      operationId: searchAndOrderTollFreeNumbers
      description: Searches and order available Toll Free numbers. For more information about Bandwidthâ€™s local phone numbers, see the [FAQ](http://dev.bandwidth.com/faq/#voice)
      parameters:
        - name: quantity
          in: query
          description: The maximum number of numbers to return
          schema:
            type: number
            format: int32
            default: 10,
            maximum: 5000
      responses:
        '201':
          description: list of ordered numbers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchAndOrderNumberData'


components:
  schemas:
    Account:
      type: object
      properties:
        balance:
          type: string
          description: Your account balance in dollars, as a string; the currency symbol is not included.
          example: '538.37250'
        accountType:
          type: string
          description: The type of account configured for your user.
          enum: 
            - pre-pay
            - post-pay
          example: pre-pay
    AccountTransaction:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the transaction.
        time:
          type: string
          format: date-time
          description: The time the transaction was processed.
        amount:
          type: string
          example: '0.1'
          description: The transaction amount in dollars, as a string; the currency symbol is not included.
        type:
          $ref: '#/components/schemas/AccountTransactionType'
        units:
          type: string
          description: The number of product units the transaction charged or credited.
        productType:
          type: string
          description: The product the transaction was related to (not all transactions are related to a product).
          enum:
            - local-number-per-month
            - toll-free-number-per-month
            - sms-in
            - sms-out
            - mms-in
            - mms-out
            - call-in
            - call-out
            - sip-call-in
            - sip-call-out
            - transcription
            - cnam-search
        number:
          type: string
          description: The phone number the transaction was related to (not all transactions are related to a phone number).
    AccountTransactionType:
      type: string
      enum:
        - charge
        - payment
        - credit
        - auto-recharge
      description: The type of transaction
    Application:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the application
        name:
          type: string
          description: A name you choose for this application.
        incomingCallUrl:
          type: string
          description: A URL where call events will be sent for an inbound call. This is the endpoint where the Application Platform will send all call events. Either incomingCallUrl or incomingMessageUrl is required.
        incomingCallUrlCallbackTimeout:
          type: integer
          description: Determine how long should the platform wait for incomingCallUrl's response before timing out in milliseconds.
        incomingCallFallbackUrl:
          type: string
          description: The URL used to send the callback event if the request to incomingCallUrl fails.
        incomingMessageUrl:
          type: string
          description: The unique identifier for the application
        incomingMessageUrlCallbackTimeout:
          type: integer
          description: The unique identifier for the application
        incomingMessageFallbackUrl:
          type: string
          description: The unique identifier for the application
        callbackHttpMethod:  
          type: string
          description: 'Determine if the callback event should be sent via HTTP GET or HTTP POST. Values are "get" or "post", default: "post".'
          enum:
            - post
            - get
          default: post
        autoAnswer:
          type: boolean
          description: Determines whether or not an incoming call should be automatically answered.
    Media:
      type: object
      properties:
        mediaName:
          type: string
          description: The mediaName is the unique name of the media
        contentLength:
          type: integer
          description: Size of the media in Bytes
        content:
          type: string
          description: URL to use to GET the specific media file.
    SearchNumberData:
      type: object
      properties:
        number:
          type: string
          description: The telephone number in E.164 format.
        nationalNumber:
          type: string
          description: The telephone number in a friendly national format.
        patternMatch:
          type: string
          description: The telephone number in a friendly national format with some numbers replaced by letters if a pattern was used to search the number.
        city:
          type: string
          description: The city of the phone number.
        lata:
          type: string
          description: Local access and transport area (LATA), represents an area within which a regional operating company is permitted to offer exchange telecommunications and exchange access services.
        rateCenter:
          type: string
          description: The rate center is a term used to identify a telephone local exchange service area.
        state:
          type: string
          description: The state of the phone number.
        price:
          type: string
          description: The monthly price for the phone number.
    SearchAndOrderNumberData:
      type: object
      properties:
        number:
          type: string
          description: The telephone number in E.164 format.
        nationalNumber:
          type: string
          description: The telephone number in a friendly national format.
        price:
          type: string
          description: The monthly price for the phone number.
        location:
          type: string
          description: Url to number

  requestBodies:
    CreateApplicationData:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: A name you choose for this application.
              incomingCallUrl:
                type: string
                description: A URL where call events will be sent for an inbound call. This is the endpoint where the Application Platform will send all call events. Either incomingCallUrl or incomingMessageUrl is required.
              incomingCallUrlCallbackTimeout:
                type: integer
                description: Determine how long should the platform wait for incomingCallUrl's response before timing out in milliseconds.
                default: 10000
              incomingCallFallbackUrl:
                type: string
                description: The URL used to send the callback event if the request to incomingCallUrl fails.
              incomingMessageUrl:
                type: string
                description: The unique identifier for the application
              incomingMessageUrlCallbackTimeout:
                type: integer
                description: The unique identifier for the application
                default: 10000
              incomingMessageFallbackUrl:
                type: string
                description: The unique identifier for the application
              callbackHttpMethod:  
                type: string
                description: 'Determine if the callback event should be sent via HTTP GET or HTTP POST. Values are "get" or "post", default: "post".'
                enum:
                  - post
                  - get
                default: post
              autoAnswer:
                type: boolean
                default: true
                description: Determines whether or not an incoming call should be automatically answered.

  responses:
    Created:
      description: Created
      headers:
        Location: 
          schema:
            type: string
    Empty:
      description: Done
